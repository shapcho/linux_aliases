
kdo_changes(){

	# set some function for argument
	# apply that function on all modified files

	files=$(git diff --name-only)

	for i in $(git diff --name-only); do
	  $1 $i
	done
}

kgrep(){

	exclude_files=(
			"eztune_items_*.c"
	)

	exclude_dirs=(
			".git"
	)

	include_files=(
#			"*.h"
#			"*.c"
#			"*.java"
#			"*.xml"
	)

	declare grep_config_str

	for((i=2; i<=$#; i++))
	do
		grep_config_str=$grep_config_str" ${!i}"
	done

	for i in "${exclude_files[@]}"
	do
		grep_config_str=$grep_config_str" --exclude \"$i\""
	done

	for i in "${exclude_dirs[@]}"
	do
		grep_config_str=$grep_config_str" --exclude-dir \"$i\""
	done

	for i in "${include_files[@]}"
	do
		grep_config_str=$grep_config_str" --include \"$i\""
		echo \"$1\"
	done

	grep_config_str="grep -rn $1 .  $grep_config_str"

	eval $grep_config_str
}

krs(){

	time ionice -c 2 -n 0 nice repo sync -j15 -c -q
}

kl()
{
	PROJECTS=(
			"project_key:project_lunch_cmd"
		)

	lunch_input=""
	for curr_project in "${PROJECTS[@]}" ; do
	    if [ "$1" == "${curr_project%%:*}" ]; then
		lunch_input="${curr_project##*:}"
	    fi

	done

	if [ "$lunch_input" == "" ]; then
		echo THERE IS NO PROJECT "$1"
		return 1

	elif [ "$2" == "test" ]; then
		echo project indetified

	elif ! [ -f build/envsetup.sh ]; then
		echo THERE IS NO  build/envsetup.sh FILE
		return 1

	else
	        source build/envsetup.sh
		lunch $lunch_input
	fi

}

kmake(){
	time  ionice -c 2 -n 0 nice make -j15
}

kall(){
     if [ -z "$1" ]; then
	echo Please provide project to lunch

     else
		kl $1 test && krs && kl $1 && kmake

     fi
}

kcam() {

   for i in $*
     do

	if [ "$i" == "b" ]; then
	    adb shell input keyevent 4

	elif [ "$i" == "c" ]; then
	    adb shell input keyevent 27

	elif [ "$i" == "p" ]; then
	    adb shell input keyevent 26

	elif [ "$i" == "s" ]; then
	    adb shell input tap 146 680

	elif [ "$i" == "sw" ]; then
		adb shell input swipe 254 788 254 100
	fi

        sleep 1

    done
}

kmm(){
	if [ ! -d "$ANDROID_BUILD_TOP" ]
	  then
	       >&2 echo "     can't find Android environments"
	       >&2 echo "     please flash after sourcing the toolchanin and lunching the desired chipset"
	       return 1
	fi

	mm 2>&1 | grep "Install: out" | tee "$ANDROID_BUILD_TOP/so_files.txt"
}

#Source local aliase to modify functions for current project
curr_dir=$( dirname "${BASH_SOURCE[0]}")

if [ -f $curr_dir/local_aliases/.local_aliases ]; then
	source $curr_dir/local_aliases/.local_aliases
else
	echo file: $curr_dir/local_aliases/.local_aliases was not found
fi


# include version control dir with tools to PATH
if [ -d "$curr_dir/local_aliases" ] ; then
    PATH="$curr_dir/local_aliases":$PATH
fi
